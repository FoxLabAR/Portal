---
interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/logo_foxlab.svg" />
    <meta name="generator" content={description} />
    <title>{title}</title>
  </head>
  <body>
    <div class="min-h-screen bg-zinc-900 text-gray-100">
      <!-- Navigation -->
      <nav
        class="p-4 flex justify-between items-center border-b border-orange-500/20"
      >
      <div class="hidden md:grid md:grid-cols-2 lg:grid-cols-5">
      <div class="flex items-center gap-2">
        <span class="text-orange-500 font-mono">[FOX-LAB]</span>
        <div class="h-2 w-2 bg-orange-500 animate-pulse rounded-full"></div>
      </div>
    </div>
      <div class="md:hidden relative">
        <img src="logo_foxlab.svg" alt="FOXLAB" class="w-10 h-10" />
      </div>
        <div class="flex gap-6 font-mono text-sm">
          <a href="#intel" class="hover:text-orange-500 transition-colors">INTEL</a>
          <a href="#missions" class="hover:text-orange-500 transition-colors">PROJECTS</a>
          <a href="#operatives" class="hover:text-orange-500 transition-colors">OPERATIVES</a>
          <a href="#contact" class="hover:text-orange-500 transition-colors">CONTACT</a
          >
        </div>
      </nav>
      <!-- contenido -->

      <div class="min-h-screen bg-zinc-900 text-gray-100">
        <slot />
      </div>
    </div>
  </body>
</html>
<style is:global>
  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0;
    }
  }

.backdrop-blur-sm {
    backdrop-filter: blur(8px);
    transition: all 0.3s ease;
}

.backdrop-blur-sm:hover {
    border-color: rgba(249, 115, 22, 0.4);
    box-shadow: 0 0 15px rgba(249, 115, 22, 0.1);
    transform: translateY(-2px);
}

/* Existing animations */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in {
  animation: fadeIn 0.5s ease-out;
}

/* Enhanced scrollbar styling */
.custom-scrollbar::-webkit-scrollbar {
  width: 4px;
}

.custom-scrollbar::-webkit-scrollbar-track {
  background: rgba(249, 115, 22, 0.1);
  border-radius: 2px;
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background: rgba(249, 115, 22, 0.3);
  border-radius: 2px;
  transition: all 0.3s ease;
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background: rgba(249, 115, 22, 0.5);
}

.custom-scrollbar {
  scrollbar-width: thin;
  scrollbar-color: rgba(249, 115, 22, 0.3) rgba(249, 115, 22, 0.1);
}

.project-enter-active,
.project-leave-active {
  transition: all 0.3s ease;
}

.project-enter-from,
.project-leave-to {
  opacity: 0;
  transform: translateY(30px);
}

.filter-bounce-enter-active {
  animation: bounce-in 0.5s;
}

.filter-bounce-leave-active {
  animation: bounce-in 0.5s reverse;
}

@keyframes bounce-in {
  0% {
    transform: scale(0);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

.animate-glitch {
  animation: fadeIn 0.5s ease-in, glitch 0.3s infinite;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.typing-text {
  overflow: hidden;
  border-right: 2px solid #4ade80;
  white-space: nowrap;
  margin: 0 auto;
  animation: typing 3.5s steps(40, end),
    blink-caret 0.75s step-end infinite;
}

.typing-text-fast {
  overflow: hidden;
  border-right: 2px solid #ef4444;
  white-space: nowrap;
  margin: 0 auto;
  animation: typing 2s steps(40, end),
    blink-caret 0.75s step-end infinite;
}

.typing-effect {
  opacity: 0;
  animation: fadeIn 0.5s ease-in forwards;
}

@keyframes typing {
  from {
    width: 0
  }

  to {
    width: 100%
  }
}

@keyframes blink-caret {

  from,
  to {
    border-color: transparent
  }

  50% {
    border-color: #4ade80
  }
}

.glitch {
  animation: glitch 0.3s infinite;
}

@keyframes glitch {
  0% {
    transform: translate(0);
    text-shadow: 2px 2px #ef4444;
  }

  25% {
    transform: translate(-2px, 2px);
    text-shadow: -2px -2px #4ade80;
  }

  50% {
    transform: translate(2px, -2px);
    text-shadow: 2px -2px #ef4444;
  }

  75% {
    transform: translate(-2px, 2px);
    text-shadow: -2px 2px #4ade80;
  }

  100% {
    transform: translate(0);
    text-shadow: 2px 2px #ef4444;
  }
}


</style>
